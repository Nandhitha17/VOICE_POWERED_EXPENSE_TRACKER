[{"C:\\expense_track\\src\\index.js":"1","C:\\expense_track\\src\\App.js":"2","C:\\expense_track\\src\\context\\context.js":"3","C:\\expense_track\\src\\styles.js":"4","C:\\expense_track\\src\\context\\contextReducer.js":"5","C:\\expense_track\\src\\components\\Main\\Main.jsx":"6","C:\\expense_track\\src\\components\\Details\\Details.jsx":"7","C:\\expense_track\\src\\components\\Main\\styles.js":"8","C:\\expense_track\\src\\components\\Details\\styles.js":"9","C:\\expense_track\\src\\useTransactions.js":"10","C:\\expense_track\\src\\components\\InfoCard\\InfoCard.jsx":"11","C:\\expense_track\\src\\components\\Main\\Form\\Form.jsx":"12","C:\\expense_track\\src\\components\\Main\\List\\List.jsx":"13","C:\\expense_track\\src\\constants\\categories.js":"14","C:\\expense_track\\src\\components\\Main\\List\\styles.js":"15","C:\\expense_track\\src\\components\\Main\\Form\\styles.js":"16","C:\\expense_track\\src\\utils\\formatDate.js":"17","C:\\expense_track\\src\\components\\Snackbar\\Snackbar.jsx":"18","C:\\expense_track\\src\\components\\Snackbar\\styles.js":"19","C:\\expen\\src\\index.js":"20","C:\\expen\\src\\App.js":"21","C:\\expen\\src\\context\\context.js":"22","C:\\expen\\src\\styles.js":"23","C:\\expen\\src\\context\\contextReducer.js":"24","C:\\expen\\src\\components\\index.js":"25","C:\\expen\\src\\components\\InfoCard.jsx":"26","C:\\expen\\src\\components\\Details\\Details.jsx":"27","C:\\expen\\src\\components\\Main\\Main.jsx":"28","C:\\expen\\src\\components\\Snackbar\\Snackbar.jsx":"29","C:\\expen\\src\\components\\Snackbar\\styles.js":"30","C:\\expen\\src\\components\\Main\\styles.js":"31","C:\\expen\\src\\components\\Main\\Form\\Form.jsx":"32","C:\\expen\\src\\components\\Main\\List\\List.jsx":"33","C:\\expen\\src\\components\\Main\\List\\styles.js":"34","C:\\expen\\src\\components\\Main\\Form\\styles.js":"35","C:\\expen\\src\\constants\\categories.js":"36","C:\\expen\\src\\utils\\formatDate.js":"37","C:\\expen\\src\\useTransactions.js":"38","C:\\expen\\src\\components\\Details\\styles.js":"39"},{"size":678,"mtime":1615024340580,"results":"40","hashOfConfig":"41"},{"size":2115,"mtime":1615024340519,"results":"42","hashOfConfig":"41"},{"size":1099,"mtime":1615024341420,"results":"43","hashOfConfig":"41"},{"size":551,"mtime":1615024340608,"results":"44","hashOfConfig":"41"},{"size":714,"mtime":1615024341451,"results":"45","hashOfConfig":"41"},{"size":1366,"mtime":1615024341001,"results":"46","hashOfConfig":"41"},{"size":752,"mtime":1615024340818,"results":"47","hashOfConfig":"41"},{"size":682,"mtime":1615024341050,"results":"48","hashOfConfig":"41"},{"size":443,"mtime":1615024340880,"results":"49","hashOfConfig":"41"},{"size":1302,"mtime":1615024340635,"results":"50","hashOfConfig":"41"},{"size":412,"mtime":1615024340937,"results":"51","hashOfConfig":"41"},{"size":5166,"mtime":1615024341115,"results":"52","hashOfConfig":"41"},{"size":1634,"mtime":1615024341199,"results":"53","hashOfConfig":"41"},{"size":1659,"mtime":1615024341389,"results":"54","hashOfConfig":"41"},{"size":398,"mtime":1615024341233,"results":"55","hashOfConfig":"41"},{"size":235,"mtime":1615024341160,"results":"56","hashOfConfig":"41"},{"size":340,"mtime":1615024341484,"results":"57","hashOfConfig":"41"},{"size":933,"mtime":1615024341271,"results":"58","hashOfConfig":"41"},{"size":195,"mtime":1615024341302,"results":"59","hashOfConfig":"41"},{"size":431,"mtime":1615027978813,"results":"60","hashOfConfig":"61"},{"size":1440,"mtime":1614843630120,"results":"62","hashOfConfig":"61"},{"size":2032,"mtime":1614843630723,"results":"63","hashOfConfig":"61"},{"size":582,"mtime":1614843630230,"results":"64","hashOfConfig":"61"},{"size":583,"mtime":1614843630770,"results":"65","hashOfConfig":"61"},{"size":216,"mtime":1614843630360,"results":"66","hashOfConfig":"61"},{"size":458,"mtime":1615030808085,"results":"67","hashOfConfig":"61"},{"size":727,"mtime":1615027713972,"results":"68","hashOfConfig":"61"},{"size":1272,"mtime":1615028450432,"results":"69","hashOfConfig":"61"},{"size":797,"mtime":1614843630631,"results":"70","hashOfConfig":"61"},{"size":206,"mtime":1614843630658,"results":"71","hashOfConfig":"61"},{"size":514,"mtime":1614843630484,"results":"72","hashOfConfig":"61"},{"size":4946,"mtime":1614843630517,"results":"73","hashOfConfig":"61"},{"size":1405,"mtime":1615028341347,"results":"74","hashOfConfig":"61"},{"size":416,"mtime":1614843630599,"results":"75","hashOfConfig":"61"},{"size":247,"mtime":1614843630542,"results":"76","hashOfConfig":"61"},{"size":1693,"mtime":1614843630692,"results":"77","hashOfConfig":"61"},{"size":301,"mtime":1614843630814,"results":"78","hashOfConfig":"61"},{"size":1124,"mtime":1614843630258,"results":"79","hashOfConfig":"61"},{"size":247,"mtime":1614843630426,"results":"80","hashOfConfig":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1rqyao9",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"1l8467v",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"127"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"127"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"127"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},"C:\\expense_track\\src\\index.js",[],["170","171"],"C:\\expense_track\\src\\App.js",["172","173"],"import React, { useRef, useEffect } from 'react'\nimport { Grid } from '@material-ui/core'\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui'\nimport Details from './components/Details/Details'\nimport Main from './components/Main/Main'\nimport useStyles from './styles'\nimport { borders } from '@material-ui/system';\nimport Box from '@material-ui/core/Box'\nimport { SpeechState, useSpeechContext } from '@speechly/react-client'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Ubuntu Mono',\n      'monospace',\n    ].join(','),\n  },});\n\nconst App = () => {\n  const classes = useStyles()\n  const { speechState } = useSpeechContext() \n  const main = useRef(null)\n  const executeScroll = () => main.current.scrollIntoView()\n  \n\n  useEffect(() => {\n      if(speechState === SpeechState.Recording)\n          executeScroll()\n  }, [speechState])\n  return (\n    <ThemeProvider theme={theme}>\n    <div >\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{height: '100vh'}}>\n        \n          <Grid item xs={12} sm={4} style={{boxShadow: '10px 5px 5px gray', borderRadius: '15px'}} className={classes.mobile}>\n            <Details title=\"Income\" />\n          </Grid>\n        \n        <Grid ref={main} item xs={12} sm={3} borderRadius=\"50%\"  style={{boxShadow: '5px 5px 5px gray', borderRadius: '15px'}} className={classes.main}>\n         <Main />\n        </Grid>\n        <Grid item xs={12} sm={4} style={{boxShadow: '10px 5px 5px gray', borderRadius: '15px'}} className={classes.desktop}>\n            <Details title=\"Income\" />\n          </Grid>\n        <Grid item xs={12} sm={4} borderRadius=\"50%\"  style={{boxShadow: '10px 5px 5px gray', borderRadius: '15px'}} className={classes.last}>\n          <Details title=\"Expense\"/>\n        </Grid>\n      </Grid>\n      <PushToTalkButtonContainer>\n        <PushToTalkButton />\n        <ErrorPanel />\n      </PushToTalkButtonContainer>\n    </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","C:\\expense_track\\src\\context\\context.js",[],"C:\\expense_track\\src\\styles.js",[],"C:\\expense_track\\src\\context\\contextReducer.js",["174"],"// reducer -> Takes an old state and an action, and returns a new state\nconst contextReducer = (state, action) => {\n    let transactions\n    switch(action.type) {\n        \n        case 'DELETE_TRANSACTION': \n            transactions = state.filter((t) => t.id !== action.payload)\n            localStorage.setItem('transactions', JSON.stringify(transactions))\n            return transactions\n            \n        case 'ADD_TRANSACTION':\n            transactions = [action.payload, ...state]\n            localStorage.setItem('transactions', JSON.stringify(transactions))\n\n            return transactions\n            \n        default:\n            return state\n            break\n    }\n\n}\n\nexport default contextReducer","C:\\expense_track\\src\\components\\Main\\Main.jsx",[],"C:\\expense_track\\src\\components\\Details\\Details.jsx",[],"C:\\expense_track\\src\\components\\Main\\styles.js",[],"C:\\expense_track\\src\\components\\Details\\styles.js",["175"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(() => ({\n    income: {\n        // borderBottom : '10px solid #a9abb3',\n        backgroundColor: '#25282c',\n        color: '#dde0e3',\n         borderRadius: '15px'\n\n    },\n    expense: {\n        // borderBottom : '10px solid #a9abb3',\n        backgroundColor: '#25282c',\n        color: '#dde0e3',\n        borderRadius: '15px'\n        \n    }\n}))","C:\\expense_track\\src\\useTransactions.js",[],"C:\\expense_track\\src\\components\\InfoCard\\InfoCard.jsx",[],"C:\\expense_track\\src\\components\\Main\\Form\\Form.jsx",["176"],"import React, { useState, useEffect, useContext } from 'react'\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { ExpenseTrackerContext } from '../../../context/context'\nimport CustomizedSnackbar from '../../Snackbar/Snackbar'\nimport { v4 as uid } from 'uuid'\nimport { useSpeechContext } from '@speechly/react-client'\n\nimport useStyles from './styles'\nimport { incomeCategories, expenseCategories } from '../../../constants/categories'\nimport formatDate from '../../../utils/formatDate'\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date()),\n\n}\n\nconst Form = () => {\n    const classes = useStyles()\n    const [formData, setFormData] = useState(initialState)\n    const { addTransaction } = useContext(ExpenseTrackerContext)\n    const { segment } = useSpeechContext()\n    const [open, setOpen] = useState(false)\n\n    const createTransaction = () => {\n        if(!formData.date.includes('-'))\n            return\n        const transaction = { ...formData, amount: Number(formData.amount), id:uid() }\n\n        setOpen(true)\n        addTransaction(transaction)\n        setFormData(initialState)\n    }\n\n    useEffect(() => {\n            if(segment) {\n                if (segment.intent.intent === 'add_expense')\n                    setFormData({ ...formData, type: 'Expense'})\n                else if (segment.intent.intent === 'add_income')\n                    setFormData({ ...formData, type: 'Income'})\n                else if (segment.isFinal && segment.intent.intent === 'create_transaction')\n                    return createTransaction()\n                else if(segment.isFinal && segment.intent.intent === 'cancel_transaction')\n                    return setFormData(initialState)\n                segment.entities.forEach(e => {\n                    const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\n                    switch (e.type) {\n                        case 'amount':\n                            setFormData({ ...formData, amount: e.value})\n                            break;\n                        case 'category': \n                            if(incomeCategories.map(iC => iC.type).includes(category))\n                                setFormData({ ...formData, type: 'Income', category})\n                            else if(expenseCategories.map(iC => iC.type).includes(category))\n                                setFormData({ ...formData, type: 'Expense', category})\n                            break\n                        case 'date':\n                            setFormData({ ...formData, date: e.value})\n                            break    \n                        default:\n                            break;\n                    }\n            });\n\n            if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date)\n                createTransaction()\n            }   \n\n            \n    }, [segment])\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories    \n    return (\n        <Grid container spacing={2}>\n            <CustomizedSnackbar open={open} setOpen={setOpen}/>\n            <Grid item xs={12}>\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom  style={{color: 'white'}}>\n                  \n                   { segment && segment.words.map((w) => w.value).join(' ') }\n                </Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel style={{color: 'white'}}>\n                        Type\n                    </InputLabel>\n                    <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value})}>\n                        <MenuItem value=\"Income\" >Income</MenuItem>\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth style={{color: 'white'}}>\n                    <InputLabel  style={{color: 'white'}}>Category</InputLabel>\n                    <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value})}>\n    {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type} >{c.type}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6} >\n                <TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e) => setFormData({...formData, amount: e.target.value})}/>\n            </Grid>\n            <Grid item xs={6}>\n                <TextField type=\"date\" label=\"Date\" fullWidth  value={formData.date} onChange={(e) => setFormData({...formData, date: formatDate(e.target.value)})}/>\n            </Grid>\n            <Button className={classes.button} variant=\"outlined\" onClick = { createTransaction } color=\"secondary\" fullWidth>\n                Create\n            </Button>\n        </Grid>\n    )\n}\n\nexport default Form\n","C:\\expense_track\\src\\components\\Main\\List\\List.jsx",["177"],"import React, { useContext } from 'react'\nimport { List as MUIList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide} from '@material-ui/core'\nimport {Delete, MoneyOff} from '@material-ui/icons'\nimport { ExpenseTrackerContext } from '../../../context/context'\n\nimport useStyles from './styles'\n\nconst List = () => {\n    const classes = useStyles()\n    const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext)\n\n   \n\n    return (\n        <MUIList dense={false} className={classes.list}>\n            {transactions.map((transaction) => (\n                <Slide direction=\"down\" in mountOnEnter unMountOnExit key={transaction.id}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={transaction.type===\"Income\" ? classes.avatarIncome: classes.avatarExpense}>\n                                    <MoneyOff />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={transaction.category} secondary={`Rs ${transaction.amount} - ${transaction.date}`}/>\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick=\"\" onClick={() => deleteTransaction(transaction.id)}>\n                                    <Delete />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                </Slide>\n            ))}\n\n        </MUIList>\n    )\n}\n\nexport default List\n","C:\\expense_track\\src\\constants\\categories.js",[],"C:\\expense_track\\src\\components\\Main\\List\\styles.js",[],"C:\\expense_track\\src\\components\\Main\\Form\\styles.js",[],"C:\\expense_track\\src\\utils\\formatDate.js",[],"C:\\expense_track\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\expense_track\\src\\components\\Snackbar\\styles.js",[],"C:\\expen\\src\\index.js",[],["178","179"],"C:\\expen\\src\\App.js",[],"C:\\expen\\src\\context\\context.js",[],"C:\\expen\\src\\styles.js",[],"C:\\expen\\src\\context\\contextReducer.js",[],"C:\\expen\\src\\components\\index.js",[],"C:\\expen\\src\\components\\InfoCard.jsx",[],"C:\\expen\\src\\components\\Details\\Details.jsx",[],"C:\\expen\\src\\components\\Main\\Main.jsx",["180","181","182"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance Rs{balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n","C:\\expen\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\expen\\src\\components\\Snackbar\\styles.js",[],"C:\\expen\\src\\components\\Main\\styles.js",[],"C:\\expen\\src\\components\\Main\\Form\\Form.jsx",["183"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","C:\\expen\\src\\components\\Main\\List\\List.jsx",[],"C:\\expen\\src\\components\\Main\\List\\styles.js",[],"C:\\expen\\src\\components\\Main\\Form\\styles.js",[],"C:\\expen\\src\\constants\\categories.js",[],"C:\\expen\\src\\utils\\formatDate.js",["184"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","C:\\expen\\src\\useTransactions.js",[],"C:\\expen\\src\\components\\Details\\styles.js",[],["185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":7,"column":10,"nodeType":"193","messageId":"194","endLine":7,"endColumn":17},{"ruleId":"191","severity":1,"message":"195","line":8,"column":8,"nodeType":"193","messageId":"194","endLine":8,"endColumn":11},{"ruleId":"196","severity":1,"message":"197","line":19,"column":13,"nodeType":"198","messageId":"199","endLine":19,"endColumn":18},{"ruleId":"191","severity":1,"message":"200","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":13},{"ruleId":"201","severity":1,"message":"202","line":72,"column":8,"nodeType":"203","endLine":72,"endColumn":17,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":26,"column":87,"nodeType":"207","endLine":26,"endColumn":136},{"ruleId":"187","replacedBy":"208"},{"ruleId":"189","replacedBy":"209"},{"ruleId":"191","severity":1,"message":"210","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"211","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"212","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":78,"column":6,"nodeType":"203","endLine":78,"endColumn":15,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":1,"column":1,"nodeType":"216","endLine":11,"endColumn":3},{"ruleId":"187","replacedBy":"217"},{"ruleId":"189","replacedBy":"218"},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'borders' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["221"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["219"],["220"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.",["222"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["219"],["220"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"223","fix":"225"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"226","text":"227"},{"range":"228","text":"227"},[3001,3010],"[createTransaction, formData, segment]",[3006,3015]]